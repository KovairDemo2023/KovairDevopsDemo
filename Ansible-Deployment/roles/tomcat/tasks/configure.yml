---
# tasks file for tomcat-ansible-role

- name: Setup server.xml on aws environment
  template:
    src: "{{ tomcat_template_server_aws }}"
    dest: "{{ tomcat_install_path }}/KovairDevOps/apache-tomcat-{{ tomcat_version }}/conf/server.xml"
  when: cloud_platform=='aws'
  notify: restart tomcat

- name: Setup server.xml on azure environment
  template:
    src: "{{ tomcat_template_server_azure }}"
    dest: "{{ tomcat_install_path }}/KovairDevOps/apache-tomcat-{{ tomcat_version }}/conf/server.xml"
  when: cloud_platform=='azure'
  notify: restart tomcat

- name: Set fact of user roles to be enabled
  set_fact:
    tomcat_user_roles: "{{ (tomcat_user_roles + item.roles.split(',')|list)|unique }}"
  with_items:
    - "{{ tomcat_users }}"

- name: Setup tomcat-users.xml
  template:
    src: "{{ tomcat_template_users }}"
    dest: "{{ tomcat_install_path }}/KovairDevOps/apache-tomcat-{{ tomcat_version }}/conf/tomcat-users.xml"
  notify: restart tomcat

- name: Create symlink {{ tomcat_install_path }}/KovairDevOps/apache-tomcat-{{ tomcat_version }} to {{ tomcat_install_path }}/KovairDevOps/{{ tomcat_service_name }}
  file:
    src: "{{ tomcat_install_path }}/KovairDevOps/apache-tomcat-{{ tomcat_version }}"
    dest: "{{ tomcat_install_path }}/KovairDevOps/{{ tomcat_service_name }}"
    state: link

- name: Configure setenv.sh on Redhat
  template:
    src: "{{ tomcat_template_setenv_redhat }}"
    dest: "{{ tomcat_install_path }}/KovairDevOps/{{ tomcat_service_name }}/bin/setenv.sh"
  when: ansible_os_family=='RedHat'
  notify: restart tomcat

- name: Configure setenv.sh on Debian
  template:
    src: "{{ tomcat_template_setenv_debian }}"
    dest: "{{ tomcat_install_path }}/KovairDevOps/{{ tomcat_service_name }}/bin/setenv.sh"
  when: ansible_os_family=='Debian'
  notify: restart tomcat

- name: Set permissions
  include: set-permissions.yml
  when: tomcat_permissions_ensure_on_every_run

- name: Configure service file {{ tomcat_service_name }}.service
  template:
    src: "{{ tomcat_template_systemd_service }}"
    dest: "{{ tomcat_systemd_config_path }}/{{ tomcat_service_name }}.service"
  notify: restart tomcat

- name: Setup web.xml
  template:
    src: "{{ tomcat_template_web }}"
    dest: "{{ tomcat_install_path }}/KovairDevOps/apache-tomcat-{{ tomcat_version }}/conf/web.xml"
  notify: restart tomcat

- name: start tomcat
  systemd:
    name: "{{ tomcat_service_name }}"
    daemon_reload: yes
    state: started

- name: Enable tomcat service on startup
  systemd:
    name: "{{ tomcat_service_name }}"
    enabled: "{% if tomcat_service_enabled_on_startup %}yes{% else %}no{% endif %}"
